{"ast":null,"code":"import * as i4 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label || \"empty\");\n  }\n}\n\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nconst _c1 = function (a1, a2) {\n  return {\n    \"p-dropdown-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"in\"];\nconst _c6 = [\"editableInput\"];\n\nfunction Dropdown_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.label || \"empty\");\n  }\n}\n\nfunction Dropdown_span_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c7 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, Dropdown_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵtemplate(2, Dropdown_span_5_ng_container_2_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c7, ctx_r2.label == null || ctx_r2.label.length === 0))(\"pTooltip\", ctx_r2.tooltip)(\"tooltipPosition\", ctx_r2.tooltipPosition)(\"positionStyle\", ctx_r2.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r2.tooltipStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r2.labelId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c2, ctx_r2.selectedOption));\n  }\n}\n\nconst _c8 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext p-placeholder\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c8, ctx_r3.placeholder == null || ctx_r3.placeholder.length === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.placeholder || \"empty\");\n  }\n}\n\nfunction Dropdown_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 16, 17);\n    i0.ɵɵlistener(\"click\", function Dropdown_input_7_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onEditableInputClick());\n    })(\"input\", function Dropdown_input_7_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onEditableInputChange($event));\n    })(\"focus\", function Dropdown_input_7_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onEditableInputFocus($event));\n    })(\"blur\", function Dropdown_input_7_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵattribute(\"maxlength\", ctx_r4.maxlength)(\"placeholder\", ctx_r4.placeholder)(\"aria-expanded\", ctx_r4.overlayVisible);\n  }\n}\n\nfunction Dropdown_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 18);\n    i0.ɵɵlistener(\"click\", function Dropdown_i_8_Template_i_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Dropdown_div_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function Dropdown_div_11_div_2_Template_div_click_1_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementStart(2, \"input\", 28, 29);\n    i0.ɵɵlistener(\"keydown.enter\", function Dropdown_div_11_div_2_Template_input_keydown_enter_2_listener($event) {\n      return $event.preventDefault();\n    })(\"keydown\", function Dropdown_div_11_div_2_Template_input_keydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.onKeydown($event, false));\n    })(\"input\", function Dropdown_div_11_div_2_Template_input_input_2_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.onFilterInputChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 30);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r18.filterValue || \"\");\n    i0.ɵɵattribute(\"placeholder\", ctx_r18.filterPlaceholder)(\"aria-label\", ctx_r18.ariaFilterLabel)(\"aria-activedescendant\", ctx_r18.overlayVisible ? \"p-highlighted-option\" : ctx_r18.labelId);\n  }\n}\n\nfunction Dropdown_div_11_ng_container_5_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r33 = i0.ɵɵnextContext().$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r34.getOptionGroupLabel(optgroup_r33) || \"empty\");\n  }\n}\n\nfunction Dropdown_div_11_ng_container_5_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_div_11_ng_container_5_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c9 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    selectedOption: a1\n  };\n};\n\nfunction Dropdown_div_11_ng_container_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 32);\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_container_5_ng_template_1_span_1_Template, 2, 1, \"span\", 13);\n    i0.ɵɵtemplate(2, Dropdown_div_11_ng_container_5_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_div_11_ng_container_5_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 14);\n  }\n\n  if (rf & 2) {\n    const optgroup_r33 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r21 = i0.ɵɵreference(8);\n\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r32.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r32.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c2, optgroup_r33));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r21)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c9, ctx_r32.getOptionGroupChildren(optgroup_r33), ctx_r32.selectedOption));\n  }\n}\n\nfunction Dropdown_div_11_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_container_5_ng_template_1_Template, 4, 10, \"ng-template\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.optionsToDisplay);\n  }\n}\n\nfunction Dropdown_div_11_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_div_11_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_container_6_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r21 = i0.ɵɵreference(8);\n\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r21)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c9, ctx_r20.optionsToDisplay, ctx_r20.selectedOption));\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdownItem\", 35);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_div_11_ng_template_7_ng_container_0_ng_template_1_Template_p_dropdownItem_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r47.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r45 = ctx.$implicit;\n    const selectedOption_r40 = i0.ɵɵnextContext(2).selectedOption;\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"option\", option_r45)(\"selected\", selectedOption_r40 == option_r45)(\"label\", ctx_r44.getOptionLabel(option_r45))(\"disabled\", ctx_r44.isOptionDisabled(option_r45))(\"template\", ctx_r44.itemTemplate);\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_template_7_ng_container_0_ng_template_1_Template, 1, 5, \"ng-template\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const options_r39 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", options_r39);\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p-dropdownItem\", 35);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template_p_dropdownItem_onClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r61.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const option_r54 = ctx.$implicit;\n    const selectedOption_r40 = i0.ɵɵnextContext(3).selectedOption;\n    const ctx_r53 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"option\", option_r54)(\"selected\", selectedOption_r40 == option_r54)(\"label\", ctx_r53.getOptionLabel(option_r54))(\"disabled\", ctx_r53.isOptionDisabled(option_r54))(\"template\", ctx_r53.itemTemplate);\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r65 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 37, 38);\n    i0.ɵɵlistener(\"scrolledIndexChange\", function Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener() {\n      i0.ɵɵrestoreView(_r65);\n      const ctx_r64 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r64.scrollToSelectedVirtualScrollElement());\n    });\n    i0.ɵɵtemplate(2, Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template, 2, 5, \"ng-container\", 39);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const options_r39 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r51 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r51.scrollHeight))(\"itemSize\", ctx_r51.itemSize);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", options_r39);\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_div_11_ng_template_7_ng_template_1_cdk_virtual_scroll_viewport_0_Template, 3, 5, \"cdk-virtual-scroll-viewport\", 36);\n  }\n\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r43.virtualScroll && ctx_r43.optionsToDisplay && ctx_r43.optionsToDisplay.length);\n  }\n}\n\nfunction Dropdown_div_11_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_div_11_ng_template_7_ng_container_0_Template, 2, 1, \"ng-container\", 33);\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_template_7_ng_template_1_Template, 1, 1, \"ng-template\", null, 34, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r42 = i0.ɵɵreference(2);\n\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.virtualScroll)(\"ngIfElse\", _r42);\n  }\n}\n\nfunction Dropdown_div_11_li_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r67 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r67.emptyFilterMessageLabel, \" \");\n  }\n}\n\nfunction Dropdown_div_11_li_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 41);\n  }\n}\n\nfunction Dropdown_div_11_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 40);\n    i0.ɵɵtemplate(1, Dropdown_div_11_li_9_ng_container_1_Template, 2, 1, \"ng-container\", 33);\n    i0.ɵɵtemplate(2, Dropdown_div_11_li_9_ng_container_2_Template, 2, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.emptyFilterTemplate && !ctx_r23.emptyTemplate)(\"ngIfElse\", ctx_r23.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.emptyFilterTemplate || ctx_r23.emptyTemplate);\n  }\n}\n\nfunction Dropdown_div_11_li_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r70 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r70.emptyMessageLabel, \" \");\n  }\n}\n\nfunction Dropdown_div_11_li_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 42);\n  }\n}\n\nfunction Dropdown_div_11_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 40);\n    i0.ɵɵtemplate(1, Dropdown_div_11_li_10_ng_container_1_Template, 2, 1, \"ng-container\", 33);\n    i0.ɵɵtemplate(2, Dropdown_div_11_li_10_ng_container_2_Template, 2, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r24.emptyTemplate)(\"ngIfElse\", ctx_r24.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r24.emptyTemplate);\n  }\n}\n\nfunction Dropdown_div_11_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c11 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c12 = function (a0) {\n  return {\n    \"p-dropdown-virtualscroll\": a0\n  };\n};\n\nfunction Dropdown_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r74 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function Dropdown_div_11_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r74);\n      const ctx_r73 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r73.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function Dropdown_div_11_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r74);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r75.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.start\", function Dropdown_div_11_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r74);\n      const ctx_r76 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r76.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(1, Dropdown_div_11_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵtemplate(2, Dropdown_div_11_div_2_Template, 5, 4, \"div\", 21);\n    i0.ɵɵelementStart(3, \"div\", 22)(4, \"ul\", 23);\n    i0.ɵɵtemplate(5, Dropdown_div_11_ng_container_5_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵtemplate(6, Dropdown_div_11_ng_container_6_Template, 2, 5, \"ng-container\", 13);\n    i0.ɵɵtemplate(7, Dropdown_div_11_ng_template_7_Template, 3, 2, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, Dropdown_div_11_li_9_Template, 3, 3, \"li\", 25);\n    i0.ɵɵtemplate(10, Dropdown_div_11_li_10_Template, 3, 3, \"li\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, Dropdown_div_11_ng_container_11_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r6.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"@overlayAnimation\", i0.ɵɵpureFunction1(19, _c11, i0.ɵɵpureFunction2(16, _c10, ctx_r6.showTransitionOptions, ctx_r6.hideTransitionOptions)))(\"ngStyle\", ctx_r6.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r6.virtualScroll ? \"auto\" : ctx_r6.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c12, ctx_r6.virtualScroll));\n    i0.ɵɵattribute(\"id\", ctx_r6.listId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.filterValue && ctx_r6.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.filterValue && ctx_r6.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footerTemplate);\n  }\n}\n\nconst _c13 = function (a1, a2, a3, a4) {\n  return {\n    \"p-dropdown p-component\": true,\n    \"p-disabled\": a1,\n    \"p-dropdown-open\": a2,\n    \"p-focus\": a3,\n    \"p-dropdown-clearable\": a4\n  };\n};\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\n\nclass DropdownItem {\n  constructor() {\n    this.onClick = new EventEmitter();\n  }\n\n  onOptionClick(event) {\n    this.onClick.emit({\n      originalEvent: event,\n      option: this.option\n    });\n  }\n\n}\n\nDropdownItem.ɵfac = function DropdownItem_Factory(t) {\n  return new (t || DropdownItem)();\n};\n\nDropdownItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownItem,\n  selectors: [[\"p-dropdownItem\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    option: \"option\",\n    selected: \"selected\",\n    label: \"label\",\n    disabled: \"disabled\",\n    visible: \"visible\",\n    itemSize: \"itemSize\",\n    template: \"template\"\n  },\n  outputs: {\n    onClick: \"onClick\"\n  },\n  decls: 3,\n  vars: 15,\n  consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"ngStyle\", \"id\", \"ngClass\", \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function DropdownItem_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n        return ctx.onOptionClick($event);\n      });\n      i0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n      i0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(8, _c0, ctx.itemSize + \"px\"))(\"id\", ctx.selected ? \"p-highlighted-option\" : \"\")(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, ctx.selected, ctx.disabled));\n      i0.ɵɵattribute(\"aria-label\", ctx.label)(\"aria-selected\", ctx.selected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c2, ctx.option));\n    }\n  },\n  dependencies: [i1.Ripple, i2.NgStyle, i2.NgClass, i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdownItem',\n      template: `\n        <li (click)=\"onOptionClick($event)\" role=\"option\" pRipple\n            [attr.aria-label]=\"label\" [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"selected ? 'p-highlighted-option':''\"\n            [ngClass]=\"{'p-dropdown-item':true, 'p-highlight': selected, 'p-disabled': disabled}\">\n            <span *ngIf=\"!template\">{{label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    `,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], null, {\n    option: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }]\n  });\n})();\n\nclass Dropdown {\n  constructor(el, renderer, cd, zone, filterService, config, overlayService) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.filterService = filterService;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.scrollHeight = '200px';\n    this.resetFilterOnHide = false;\n    this.dropdownIcon = 'pi pi-chevron-down';\n    this.optionGroupChildren = \"items\";\n    this.autoDisplayFirst = true;\n    this.emptyFilterMessage = '';\n    this.emptyMessage = '';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.filterMatchMode = \"contains\";\n    this.tooltip = '';\n    this.tooltipPosition = 'right';\n    this.tooltipPositionStyle = 'absolute';\n    this.autofocusFilter = true;\n    this.onChange = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onClear = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.viewPortOffsetTop = 0;\n    this.id = UniqueComponentId();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(_disabled) {\n    if (_disabled) {\n      this.focused = false;\n      if (this.overlayVisible) this.hide();\n    }\n\n    this._disabled = _disabled;\n\n    if (!this.cd.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'emptyfilter':\n          this.emptyFilterTemplate = item.template;\n          break;\n\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.optionsToDisplay = this.options;\n    this.updateSelectedOption(null);\n    this.labelId = this.id + '_label';\n    this.listId = this.id + '_list';\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(val) {\n    this._options = val;\n    this.optionsToDisplay = this._options;\n    this.updateSelectedOption(this.value);\n    this.selectedOption = this.findOption(this.value, this.optionsToDisplay);\n\n    if (!this.selectedOption) {\n      this.value = null;\n      this.onModelChange(this.value);\n    }\n\n    this.optionsChanged = true;\n\n    if (this._filterValue && this._filterValue.length) {\n      this.activateFilter();\n    }\n  }\n\n  get filterValue() {\n    return this._filterValue;\n  }\n\n  set filterValue(val) {\n    this._filterValue = val;\n    this.activateFilter();\n  }\n\n  ngAfterViewInit() {\n    if (this.editable) {\n      this.updateEditableLabel();\n    }\n  }\n\n  get label() {\n    return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n  }\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n\n  get emptyFilterMessageLabel() {\n    return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n  }\n\n  get filled() {\n    return this.value || this.value != null || this.value != undefined;\n  }\n\n  updateEditableLabel() {\n    if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n      this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || '';\n    }\n  }\n\n  getOptionLabel(option) {\n    return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n  }\n\n  getOptionValue(option) {\n    return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n  }\n\n  isOptionDisabled(option) {\n    return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n  }\n\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n  }\n\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n\n  onItemClick(event) {\n    const option = event.option;\n\n    if (!this.isOptionDisabled(option)) {\n      this.selectItem(event.originalEvent, option);\n      this.accessibleViewChild.nativeElement.focus();\n    }\n\n    setTimeout(() => {\n      this.hide();\n    }, 150);\n  }\n\n  selectItem(event, option) {\n    if (this.selectedOption != option) {\n      this.selectedOption = option;\n      this.value = this.getOptionValue(option);\n      this.onModelChange(this.value);\n      this.updateEditableLabel();\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n\n      if (this.virtualScroll) {\n        setTimeout(() => {\n          this.viewPortOffsetTop = this.viewPort ? this.viewPort.measureScrollOffset() : 0;\n        }, 1);\n      }\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.optionsChanged && this.overlayVisible) {\n      this.optionsChanged = false;\n\n      if (this.virtualScroll) {\n        this.updateVirtualScrollSelectedIndex(true);\n      }\n\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.alignOverlay();\n        }, 1);\n      });\n    }\n\n    if (this.selectedOptionUpdated && this.itemsWrapper) {\n      if (this.virtualScroll && this.viewPort) {\n        let range = this.viewPort.getRenderedRange();\n        this.updateVirtualScrollSelectedIndex(false);\n\n        if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n          this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n        }\n      }\n\n      let selectedItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n\n      if (selectedItem) {\n        DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlay, 'li.p-highlight'));\n      }\n\n      this.selectedOptionUpdated = false;\n    }\n  }\n\n  writeValue(value) {\n    if (this.filter) {\n      this.resetFilter();\n    }\n\n    this.value = value;\n    this.updateSelectedOption(value);\n    this.updateEditableLabel();\n    this.cd.markForCheck();\n  }\n\n  resetFilter() {\n    this._filterValue = null;\n\n    if (this.filterViewChild && this.filterViewChild.nativeElement) {\n      this.filterViewChild.nativeElement.value = '';\n    }\n\n    this.optionsToDisplay = this.options;\n  }\n\n  updateSelectedOption(val) {\n    this.selectedOption = this.findOption(val, this.optionsToDisplay);\n\n    if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n      if (this.group) {\n        this.selectedOption = this.optionsToDisplay[0].items[0];\n      } else {\n        this.selectedOption = this.optionsToDisplay[0];\n      }\n\n      this.value = this.getOptionValue(this.selectedOption);\n      this.onModelChange(this.value);\n    }\n\n    this.selectedOptionUpdated = true;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  onMouseclick(event) {\n    if (this.disabled || this.readonly || this.isInputClick(event)) {\n      return;\n    }\n\n    this.onClick.emit(event);\n    this.accessibleViewChild.nativeElement.focus();\n    if (this.overlayVisible) this.hide();else this.show();\n    this.cd.detectChanges();\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n\n  isInputClick(event) {\n    return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon') || event.target.isSameNode(this.accessibleViewChild.nativeElement) || this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement);\n  }\n\n  isOutsideClicked(event) {\n    return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || this.overlay && this.overlay.contains(event.target));\n  }\n\n  isEmpty() {\n    return !this.optionsToDisplay || this.optionsToDisplay && this.optionsToDisplay.length === 0;\n  }\n\n  onEditableInputClick() {\n    this.bindDocumentClickListener();\n  }\n\n  onEditableInputFocus(event) {\n    this.focused = true;\n    this.hide();\n    this.onFocus.emit(event);\n  }\n\n  onEditableInputChange(event) {\n    this.value = event.target.value;\n    this.updateSelectedOption(this.value);\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n  }\n\n  show() {\n    this.overlayVisible = true;\n    this.cd.markForCheck();\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        let itemsWrapperSelector = this.virtualScroll ? '.cdk-virtual-scroll-viewport' : '.p-dropdown-items-wrapper';\n        this.itemsWrapper = DomHandler.findSingle(this.overlay, itemsWrapperSelector);\n        this.appendOverlay();\n\n        if (this.autoZIndex) {\n          ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n        }\n\n        this.alignOverlay();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n\n        if (this.options && this.options.length) {\n          if (!this.virtualScroll) {\n            let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n\n            if (selectedListItem) {\n              selectedListItem.scrollIntoView({\n                block: 'nearest',\n                inline: 'center'\n              });\n            }\n          }\n        }\n\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n          this.preventModelTouched = true;\n\n          if (this.autofocusFilter) {\n            this.filterViewChild.nativeElement.focus();\n          }\n        }\n\n        this.onShow.emit(event);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        this.onHide.emit(event);\n        break;\n    }\n  }\n\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        ZIndexUtils.clear(event.element);\n        break;\n    }\n  }\n\n  scrollToSelectedVirtualScrollElement() {\n    if (!this.virtualAutoScrolled) {\n      if (this.viewPortOffsetTop) {\n        this.viewPort.scrollToOffset(this.viewPortOffsetTop);\n      } else if (this.virtualScrollSelectedIndex > -1) {\n        this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n      }\n    }\n\n    this.virtualAutoScrolled = true;\n  }\n\n  updateVirtualScrollSelectedIndex(resetOffset) {\n    if (this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length) {\n      if (resetOffset) {\n        this.viewPortOffsetTop = 0;\n      }\n\n      this.virtualScrollSelectedIndex = this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay);\n    }\n  }\n\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n      if (!this.overlay.style.minWidth) {\n        this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n      }\n    }\n  }\n\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n\n  hide() {\n    this.overlayVisible = false;\n\n    if (this.filter && this.resetFilterOnHide) {\n      this.resetFilter();\n    }\n\n    if (this.virtualScroll) {\n      this.virtualAutoScrolled = false;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  alignOverlay() {\n    if (this.overlay) {\n      if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);else DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n    }\n  }\n\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n\n  onInputBlur(event) {\n    this.focused = false;\n    this.onBlur.emit(event);\n\n    if (!this.preventModelTouched) {\n      this.onModelTouched();\n    }\n\n    this.preventModelTouched = false;\n  }\n\n  findPrevEnabledOption(index) {\n    let prevEnabledOption;\n\n    if (this.optionsToDisplay && this.optionsToDisplay.length) {\n      for (let i = index - 1; 0 <= i; i--) {\n        let option = this.optionsToDisplay[i];\n\n        if (this.isOptionDisabled(option)) {\n          continue;\n        } else {\n          prevEnabledOption = option;\n          break;\n        }\n      }\n\n      if (!prevEnabledOption) {\n        for (let i = this.optionsToDisplay.length - 1; i >= index; i--) {\n          let option = this.optionsToDisplay[i];\n\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            prevEnabledOption = option;\n            break;\n          }\n        }\n      }\n    }\n\n    return prevEnabledOption;\n  }\n\n  findNextEnabledOption(index) {\n    let nextEnabledOption;\n\n    if (this.optionsToDisplay && this.optionsToDisplay.length) {\n      for (let i = index + 1; i < this.optionsToDisplay.length; i++) {\n        let option = this.optionsToDisplay[i];\n\n        if (this.isOptionDisabled(option)) {\n          continue;\n        } else {\n          nextEnabledOption = option;\n          break;\n        }\n      }\n\n      if (!nextEnabledOption) {\n        for (let i = 0; i < index; i++) {\n          let option = this.optionsToDisplay[i];\n\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            nextEnabledOption = option;\n            break;\n          }\n        }\n      }\n    }\n\n    return nextEnabledOption;\n  }\n\n  onKeydown(event, search) {\n    if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n      return;\n    }\n\n    switch (event.which) {\n      //down\n      case 40:\n        if (!this.overlayVisible && event.altKey) {\n          this.show();\n        } else {\n          if (this.group) {\n            let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n\n            if (selectedItemIndex !== -1) {\n              let nextItemIndex = selectedItemIndex.itemIndex + 1;\n\n              if (nextItemIndex < this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                this.selectedOptionUpdated = true;\n              } else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                this.selectedOptionUpdated = true;\n              }\n            } else {\n              if (this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n              }\n            }\n          } else {\n            let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n\n            if (nextEnabledOption) {\n              this.selectItem(event, nextEnabledOption);\n              this.selectedOptionUpdated = true;\n            }\n          }\n        }\n\n        event.preventDefault();\n        break;\n      //up\n\n      case 38:\n        if (this.group) {\n          let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n\n          if (selectedItemIndex !== -1) {\n            let prevItemIndex = selectedItemIndex.itemIndex - 1;\n\n            if (prevItemIndex >= 0) {\n              this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n              this.selectedOptionUpdated = true;\n            } else if (prevItemIndex < 0) {\n              let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n\n              if (prevGroup) {\n                this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                this.selectedOptionUpdated = true;\n              }\n            }\n          }\n        } else {\n          let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n          let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n\n          if (prevEnabledOption) {\n            this.selectItem(event, prevEnabledOption);\n            this.selectedOptionUpdated = true;\n          }\n        }\n\n        event.preventDefault();\n        break;\n      //space\n\n      case 32:\n        if (search) {\n          if (!this.overlayVisible) {\n            this.show();\n          } else {\n            this.hide();\n          }\n\n          event.preventDefault();\n        }\n\n        break;\n      //enter\n\n      case 13:\n        if (this.overlayVisible && (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\n          this.hide();\n        } else if (!this.overlayVisible) {\n          this.show();\n        }\n\n        event.preventDefault();\n        break;\n      //escape and tab\n\n      case 27:\n      case 9:\n        this.hide();\n        break;\n      //search item based on keyboard input\n\n      default:\n        if (search && !event.metaKey) {\n          this.search(event);\n        }\n\n        break;\n    }\n  }\n\n  search(event) {\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n    }\n\n    const char = event.key;\n    this.previousSearchChar = this.currentSearchChar;\n    this.currentSearchChar = char;\n    if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;\n    let newOption;\n\n    if (this.group) {\n      let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : {\n        groupIndex: 0,\n        itemIndex: 0\n      };\n      newOption = this.searchOptionWithinGroup(searchIndex);\n    } else {\n      let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n      newOption = this.searchOption(++searchIndex);\n    }\n\n    if (newOption && !this.isOptionDisabled(newOption)) {\n      this.selectItem(event, newOption);\n      this.selectedOptionUpdated = true;\n    }\n\n    this.searchTimeout = setTimeout(() => {\n      this.searchValue = null;\n    }, 250);\n  }\n\n  searchOption(index) {\n    let option;\n\n    if (this.searchValue) {\n      option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n\n      if (!option) {\n        option = this.searchOptionInRange(0, index);\n      }\n    }\n\n    return option;\n  }\n\n  searchOptionInRange(start, end) {\n    for (let i = start; i < end; i++) {\n      let opt = this.optionsToDisplay[i];\n\n      if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n        return opt;\n      }\n    }\n\n    return null;\n  }\n\n  searchOptionWithinGroup(index) {\n    let option;\n\n    if (this.searchValue) {\n      for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n        for (let j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n          let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n\n          if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n            return opt;\n          }\n        }\n      }\n\n      if (!option) {\n        for (let i = 0; i <= index.groupIndex; i++) {\n          for (let j = 0; j < (index.groupIndex === i ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n            let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n\n            if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n              return opt;\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  findOptionIndex(val, opts) {\n    let index = -1;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        if (val == null && this.getOptionValue(opts[i]) == null || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n\n  findOption(val, opts, inGroup) {\n    if (this.group && !inGroup) {\n      let opt;\n\n      if (opts && opts.length) {\n        for (let optgroup of opts) {\n          opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n\n          if (opt) {\n            break;\n          }\n        }\n      }\n\n      return opt;\n    } else {\n      let index = this.findOptionIndex(val, opts);\n      return index != -1 ? opts[index] : null;\n    }\n  }\n\n  onFilterInputChange(event) {\n    let inputValue = event.target.value;\n\n    if (inputValue && inputValue.length) {\n      this._filterValue = inputValue;\n      this.activateFilter();\n    } else {\n      this._filterValue = null;\n      this.optionsToDisplay = this.options;\n    }\n\n    this.optionsChanged = true;\n    this.onFilter.emit({\n      originalEvent: event,\n      filter: this._filterValue\n    });\n  }\n\n  activateFilter() {\n    let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n\n    if (this.options && this.options.length) {\n      if (this.group) {\n        let filteredGroups = [];\n\n        for (let optgroup of this.options) {\n          let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n          if (filteredSubOptions && filteredSubOptions.length) {\n            filteredGroups.push(Object.assign(Object.assign({}, optgroup), {\n              [this.optionGroupChildren]: filteredSubOptions\n            }));\n          }\n        }\n\n        this.optionsToDisplay = filteredGroups;\n      } else {\n        this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n      }\n\n      this.optionsChanged = true;\n    }\n  }\n\n  applyFocus() {\n    if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n  }\n\n  focus() {\n    this.applyFocus();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n        if (!this.preventDocumentDefault && this.isOutsideClicked(event)) {\n          this.hide();\n          this.unbindDocumentClickListener();\n        }\n\n        this.preventDocumentDefault = false;\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  onWindowResize() {\n    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n      this.hide();\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, event => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  clear(event) {\n    this.value = null;\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.updateSelectedOption(this.value);\n    this.updateEditableLabel();\n    this.onClear.emit(event);\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n    this.itemsWrapper = null;\n    this.onModelTouched();\n  }\n\n  ngOnDestroy() {\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n    }\n\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n\n}\n\nDropdown.ɵfac = function Dropdown_Factory(t) {\n  return new (t || Dropdown)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.OverlayService));\n};\n\nDropdown.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Dropdown,\n  selectors: [[\"p-dropdown\"]],\n  contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Dropdown_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 4,\n  hostBindings: function Dropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n    }\n  },\n  inputs: {\n    scrollHeight: \"scrollHeight\",\n    filter: \"filter\",\n    name: \"name\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    readonly: \"readonly\",\n    required: \"required\",\n    editable: \"editable\",\n    appendTo: \"appendTo\",\n    tabindex: \"tabindex\",\n    placeholder: \"placeholder\",\n    filterPlaceholder: \"filterPlaceholder\",\n    filterLocale: \"filterLocale\",\n    inputId: \"inputId\",\n    selectId: \"selectId\",\n    dataKey: \"dataKey\",\n    filterBy: \"filterBy\",\n    autofocus: \"autofocus\",\n    resetFilterOnHide: \"resetFilterOnHide\",\n    dropdownIcon: \"dropdownIcon\",\n    optionLabel: \"optionLabel\",\n    optionValue: \"optionValue\",\n    optionDisabled: \"optionDisabled\",\n    optionGroupLabel: \"optionGroupLabel\",\n    optionGroupChildren: \"optionGroupChildren\",\n    autoDisplayFirst: \"autoDisplayFirst\",\n    group: \"group\",\n    showClear: \"showClear\",\n    emptyFilterMessage: \"emptyFilterMessage\",\n    emptyMessage: \"emptyMessage\",\n    virtualScroll: \"virtualScroll\",\n    itemSize: \"itemSize\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    ariaFilterLabel: \"ariaFilterLabel\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    filterMatchMode: \"filterMatchMode\",\n    maxlength: \"maxlength\",\n    tooltip: \"tooltip\",\n    tooltipPosition: \"tooltipPosition\",\n    tooltipPositionStyle: \"tooltipPositionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    autofocusFilter: \"autofocusFilter\",\n    disabled: \"disabled\",\n    options: \"options\",\n    filterValue: \"filterValue\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onFilter: \"onFilter\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onClick: \"onClick\",\n    onShow: \"onShow\",\n    onHide: \"onHide\",\n    onClear: \"onClear\"\n  },\n  features: [i0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n  decls: 12,\n  vars: 25,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"\", \"aria-haspopup\", \"listbox\", \"aria-haspopup\", \"listbox\", \"role\", \"combobox\", 3, \"disabled\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"p-dropdown-label p-inputtext\", \"aria-haspopup\", \"listbox\", 3, \"disabled\", \"click\", \"input\", \"focus\", \"blur\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [\"onOverlayAnimationEnd\", \"\", 3, \"ngClass\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-label\", \"p-inputtext\", 3, \"disabled\", \"click\", \"input\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [1, \"p-dropdown-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [\"onOverlayAnimationEnd\", \"\", 3, \"ngClass\", \"ngStyle\", \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-header\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"itemslist\", \"\"], [\"class\", \"p-dropdown-empty-message\", 4, \"ngIf\"], [1, \"p-dropdown-header\"], [1, \"p-dropdown-filter-container\", 3, \"click\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"keydown.enter\", \"keydown\", \"input\"], [\"filter\", \"\"], [1, \"p-dropdown-filter-icon\", \"pi\", \"pi-search\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-dropdown-item-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollList\", \"\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"onClick\"], [3, \"ngStyle\", \"itemSize\", \"scrolledIndexChange\", 4, \"ngIf\"], [3, \"ngStyle\", \"itemSize\", \"scrolledIndexChange\"], [\"viewport\", \"\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [1, \"p-dropdown-empty-message\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"]],\n  template: function Dropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n        return ctx.onMouseclick($event);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3, 4);\n      i0.ɵɵlistener(\"focus\", function Dropdown_Template_input_focus_3_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function Dropdown_Template_input_blur_3_listener($event) {\n        return ctx.onInputBlur($event);\n      })(\"keydown\", function Dropdown_Template_input_keydown_3_listener($event) {\n        return ctx.onKeydown($event, true);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, Dropdown_span_5_Template, 3, 13, \"span\", 5);\n      i0.ɵɵtemplate(6, Dropdown_span_6_Template, 2, 4, \"span\", 6);\n      i0.ɵɵtemplate(7, Dropdown_input_7_Template, 2, 4, \"input\", 7);\n      i0.ɵɵtemplate(8, Dropdown_i_8_Template, 1, 0, \"i\", 8);\n      i0.ɵɵelementStart(9, \"div\", 9);\n      i0.ɵɵelement(10, \"span\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, Dropdown_div_11_Template, 12, 23, \"div\", 11);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(20, _c13, ctx.disabled, ctx.overlayVisible, ctx.focused, ctx.showClear && !ctx.disabled))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.ariaLabel)(\"aria-expanded\", false)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"tabindex\", ctx.tabindex)(\"autofocus\", ctx.autofocus)(\"aria-activedescendant\", ctx.overlayVisible ? ctx.labelId : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.value != null && ctx.showClear && !ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.dropdownIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  dependencies: [DropdownItem, i4.CdkVirtualScrollViewport, i2.NgClass, i2.NgStyle, i2.NgIf, i5.Tooltip, i2.NgTemplateOutlet, i2.NgForOf, i4.CdkFixedSizeVirtualScroll, i4.CdkVirtualForOf],\n  styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-panel{position:absolute;top:0;left:0}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdown',\n      template: `\n         <div #container [ngClass]=\"{'p-dropdown p-component':true,\n            'p-disabled':disabled, 'p-dropdown-open':overlayVisible, 'p-focus':focused, 'p-dropdown-clearable': showClear && !disabled}\"\n            (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #in [attr.id]=\"inputId\" type=\"text\" readonly (focus)=\"onInputFocus($event)\" aria-haspopup=\"listbox\" [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-expanded]=\"false\" [attr.aria-labelledby]=\"ariaLabelledBy\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\" [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\" role=\"combobox\">\n            </div>\n            <span [attr.id]=\"labelId\" [ngClass]=\"{'p-dropdown-label p-inputtext':true,'p-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n            </span>\n            <span [ngClass]=\"{'p-dropdown-label p-inputtext p-placeholder':true,'p-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</span>\n            <input #editableInput type=\"text\" [attr.maxlength]=\"maxlength\" class=\"p-dropdown-label p-inputtext\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" (click)=\"onEditableInputClick()\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"'p-dropdown-panel p-component'\" (click)=\"onOverlayClick($event)\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.start)=\"onOverlayAnimationEnd($event)\"onOverlayAnimationEnd [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-dropdown-header\" *ngIf=\"filter\">\n                    <div class=\"p-dropdown-filter-container\" (click)=\"$event.stopPropagation()\">\n                        <input #filter type=\"text\" autocomplete=\"off\" [value]=\"filterValue||''\" class=\"p-dropdown-filter p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\"\n                        (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\" (input)=\"onFilterInputChange($event)\" [attr.aria-label]=\"ariaFilterLabel\" [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\">\n                        <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"{'p-dropdown-virtualscroll': virtualScroll}\" role=\"listbox\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n                                <li class=\"p-dropdown-item-group\">\n                                    <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption}\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                    <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                    (onClick)=\"onItemClick($event)\"\n                                                    [template]=\"itemTemplate\"></p-dropdownItem>\n                                </ng-template>\n                            </ng-container>\n                            <ng-template #virtualScrollList>\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\"scrollToSelectedVirtualScrollElement()\" #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && optionsToDisplay && optionsToDisplay.length\">\n                                    <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                        <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                                   (onClick)=\"onItemClick($event)\"\n                                                                   [template]=\"itemTemplate\"></p-dropdownItem>\n                                    </ng-container>\n                                </cdk-virtual-scroll-viewport>\n                            </ng-template>\n                        </ng-template>\n                        <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{emptyFilterMessageLabel}}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </div>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        'class': 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n      },\n      providers: [DROPDOWN_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-panel{position:absolute;top:0;left:0}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.FilterService\n    }, {\n      type: i3.PrimeNGConfig\n    }, {\n      type: i3.OverlayService\n    }];\n  }, {\n    scrollHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    filterPlaceholder: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    selectId: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    filterBy: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    resetFilterOnHide: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    autoDisplayFirst: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    emptyFilterMessage: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    autofocusFilter: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    filterViewChild: [{\n      type: ViewChild,\n      args: ['filter']\n    }],\n    accessibleViewChild: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    viewPort: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    editableInputViewChild: [{\n      type: ViewChild,\n      args: ['editableInput']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DropdownModule {}\n\nDropdownModule.ɵfac = function DropdownModule_Factory(t) {\n  return new (t || DropdownModule)();\n};\n\nDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownModule\n});\nDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule],\n      exports: [Dropdown, SharedModule, ScrollingModule],\n      declarations: [Dropdown, DropdownItem]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };","map":{"version":3,"names":["i4","CdkVirtualScrollViewport","ScrollingModule","i0","forwardRef","EventEmitter","Component","Input","Output","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ContentChildren","NgModule","trigger","transition","style","animate","i2","CommonModule","i3","TranslationKeys","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","NG_VALUE_ACCESSOR","i5","TooltipModule","i1","RippleModule","DROPDOWN_VALUE_ACCESSOR","provide","useExisting","Dropdown","multi","DropdownItem","constructor","onClick","onOptionClick","event","emit","originalEvent","option","ɵfac","ɵcmp","Ripple","NgStyle","NgClass","NgIf","NgTemplateOutlet","type","args","selector","template","host","selected","label","disabled","visible","itemSize","el","renderer","cd","zone","filterService","config","overlayService","scrollHeight","resetFilterOnHide","dropdownIcon","optionGroupChildren","autoDisplayFirst","emptyFilterMessage","emptyMessage","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","filterMatchMode","tooltip","tooltipPosition","tooltipPositionStyle","autofocusFilter","onChange","onFilter","onFocus","onBlur","onShow","onHide","onClear","onModelChange","onModelTouched","viewPortOffsetTop","id","_disabled","focused","overlayVisible","hide","destroyed","detectChanges","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","selectedItemTemplate","headerTemplate","footerTemplate","emptyFilterTemplate","emptyTemplate","groupTemplate","ngOnInit","optionsToDisplay","options","updateSelectedOption","labelId","listId","_options","val","value","selectedOption","findOption","optionsChanged","_filterValue","length","activateFilter","filterValue","ngAfterViewInit","editable","updateEditableLabel","getOptionLabel","emptyMessageLabel","getTranslation","EMPTY_MESSAGE","emptyFilterMessageLabel","EMPTY_FILTER_MESSAGE","filled","undefined","editableInputViewChild","nativeElement","optionLabel","resolveFieldData","getOptionValue","optionValue","isOptionDisabled","optionDisabled","getOptionGroupLabel","optionGroup","optionGroupLabel","getOptionGroupChildren","items","onItemClick","selectItem","accessibleViewChild","focus","setTimeout","virtualScroll","viewPort","measureScrollOffset","ngAfterViewChecked","updateVirtualScrollSelectedIndex","runOutsideAngular","alignOverlay","selectedOptionUpdated","itemsWrapper","range","getRenderedRange","start","virtualScrollSelectedIndex","end","scrollToIndex","selectedItem","findSingle","overlay","scrollInView","writeValue","filter","resetFilter","markForCheck","filterViewChild","placeholder","group","registerOnChange","fn","registerOnTouched","setDisabledState","onMouseclick","readonly","isInputClick","show","onOverlayClick","add","target","hasClass","isSameNode","isOutsideClicked","contains","isEmpty","onEditableInputClick","bindDocumentClickListener","onEditableInputFocus","onEditableInputChange","onOverlayAnimationStart","toState","element","itemsWrapperSelector","appendOverlay","set","zIndex","bindDocumentResizeListener","bindScrollListener","selectedListItem","scrollIntoView","block","inline","preventModelTouched","onOverlayHide","onOverlayAnimationEnd","clear","scrollToSelectedVirtualScrollElement","virtualAutoScrolled","scrollToOffset","resetOffset","findOptionIndex","appendTo","document","body","appendChild","minWidth","getWidth","containerViewChild","restoreOverlayAppend","absolutePosition","relativePosition","onInputFocus","onInputBlur","findPrevEnabledOption","index","prevEnabledOption","i","findNextEnabledOption","nextEnabledOption","onKeydown","search","which","altKey","selectedItemIndex","findOptionGroupIndex","nextItemIndex","itemIndex","groupIndex","preventDefault","prevItemIndex","prevGroup","metaKey","searchTimeout","clearTimeout","char","key","previousSearchChar","currentSearchChar","searchValue","newOption","searchIndex","searchOptionWithinGroup","searchOption","searchOptionInRange","opt","toLocaleLowerCase","filterLocale","startsWith","j","opts","equals","dataKey","inGroup","optgroup","onFilterInputChange","inputValue","searchFields","filterBy","split","filteredGroups","filteredSubOptions","push","Object","assign","applyFocus","documentClickListener","documentTarget","ownerDocument","listen","preventDocumentDefault","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","isTouchDevice","scrollHandler","unbindScrollListener","ngOnDestroy","destroy","ElementRef","Renderer2","ChangeDetectorRef","NgZone","FilterService","PrimeNGConfig","OverlayService","Tooltip","NgForOf","CdkFixedSizeVirtualScroll","CdkVirtualForOf","opacity","transform","animations","providers","changeDetection","OnPush","encapsulation","None","styles","name","panelStyle","styleClass","panelStyleClass","required","tabindex","filterPlaceholder","inputId","selectId","autofocus","showClear","ariaFilterLabel","ariaLabel","ariaLabelledBy","maxlength","tooltipStyleClass","DropdownModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/home/vannessa/star-war-api-view/node_modules/primeng/fesm2015/primeng-dropdown.mjs"],"sourcesContent":["import * as i4 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Dropdown),\n    multi: true\n};\nclass DropdownItem {\n    constructor() {\n        this.onClick = new EventEmitter();\n    }\n    onOptionClick(event) {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\nDropdownItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDropdownItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: DropdownItem, selector: \"p-dropdownItem\", inputs: { option: \"option\", selected: \"selected\", label: \"label\", disabled: \"disabled\", visible: \"visible\", itemSize: \"itemSize\", template: \"template\" }, outputs: { onClick: \"onClick\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <li (click)=\"onOptionClick($event)\" role=\"option\" pRipple\n            [attr.aria-label]=\"label\" [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"selected ? 'p-highlighted-option':''\"\n            [ngClass]=\"{'p-dropdown-item':true, 'p-highlight': selected, 'p-disabled': disabled}\">\n            <span *ngIf=\"!template\">{{label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    `, isInline: true, directives: [{ type: i1.Ripple, selector: \"[pRipple]\" }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-dropdownItem',\n                    template: `\n        <li (click)=\"onOptionClick($event)\" role=\"option\" pRipple\n            [attr.aria-label]=\"label\" [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"selected ? 'p-highlighted-option':''\"\n            [ngClass]=\"{'p-dropdown-item':true, 'p-highlight': selected, 'p-disabled': disabled}\">\n            <span *ngIf=\"!template\">{{label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    `,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], propDecorators: { option: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }] } });\nclass Dropdown {\n    constructor(el, renderer, cd, zone, filterService, config, overlayService) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.filterService = filterService;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.scrollHeight = '200px';\n        this.resetFilterOnHide = false;\n        this.dropdownIcon = 'pi pi-chevron-down';\n        this.optionGroupChildren = \"items\";\n        this.autoDisplayFirst = true;\n        this.emptyFilterMessage = '';\n        this.emptyMessage = '';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.filterMatchMode = \"contains\";\n        this.tooltip = '';\n        this.tooltipPosition = 'right';\n        this.tooltipPositionStyle = 'absolute';\n        this.autofocusFilter = true;\n        this.onChange = new EventEmitter();\n        this.onFilter = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.viewPortOffsetTop = 0;\n        this.id = UniqueComponentId();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    ;\n    set disabled(_disabled) {\n        if (_disabled) {\n            this.focused = false;\n            if (this.overlayVisible)\n                this.hide();\n        }\n        this._disabled = _disabled;\n        if (!this.cd.destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnInit() {\n        this.optionsToDisplay = this.options;\n        this.updateSelectedOption(null);\n        this.labelId = this.id + '_label';\n        this.listId = this.id + '_list';\n    }\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n        this.optionsToDisplay = this._options;\n        this.updateSelectedOption(this.value);\n        this.selectedOption = this.findOption(this.value, this.optionsToDisplay);\n        if (!this.selectedOption) {\n            this.value = null;\n            this.onModelChange(this.value);\n        }\n        this.optionsChanged = true;\n        if (this._filterValue && this._filterValue.length) {\n            this.activateFilter();\n        }\n    }\n    get filterValue() {\n        return this._filterValue;\n    }\n    set filterValue(val) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n    ngAfterViewInit() {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n    }\n    get label() {\n        return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    get filled() {\n        return this.value || this.value != null || this.value != undefined;\n    }\n    updateEditableLabel() {\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n            this.editableInputViewChild.nativeElement.value = (this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || '');\n        }\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : (option.label != undefined ? option.label : option);\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : (this.optionLabel || option.value === undefined ? option : option.value);\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : (option.disabled !== undefined ? option.disabled : false);\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    onItemClick(event) {\n        const option = event.option;\n        if (!this.isOptionDisabled(option)) {\n            this.selectItem(event.originalEvent, option);\n            this.accessibleViewChild.nativeElement.focus();\n        }\n        setTimeout(() => {\n            this.hide();\n        }, 150);\n    }\n    selectItem(event, option) {\n        if (this.selectedOption != option) {\n            this.selectedOption = option;\n            this.value = this.getOptionValue(option);\n            this.onModelChange(this.value);\n            this.updateEditableLabel();\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n            if (this.virtualScroll) {\n                setTimeout(() => {\n                    this.viewPortOffsetTop = this.viewPort ? this.viewPort.measureScrollOffset() : 0;\n                }, 1);\n            }\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n            if (this.virtualScroll) {\n                this.updateVirtualScrollSelectedIndex(true);\n            }\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.alignOverlay();\n                }, 1);\n            });\n        }\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            if (this.virtualScroll && this.viewPort) {\n                let range = this.viewPort.getRenderedRange();\n                this.updateVirtualScrollSelectedIndex(false);\n                if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n                    this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n                }\n            }\n            let selectedItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n            if (selectedItem) {\n                DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlay, 'li.p-highlight'));\n            }\n            this.selectedOptionUpdated = false;\n        }\n    }\n    writeValue(value) {\n        if (this.filter) {\n            this.resetFilter();\n        }\n        this.value = value;\n        this.updateSelectedOption(value);\n        this.updateEditableLabel();\n        this.cd.markForCheck();\n    }\n    resetFilter() {\n        this._filterValue = null;\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this.optionsToDisplay = this.options;\n    }\n    updateSelectedOption(val) {\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n            if (this.group) {\n                this.selectedOption = this.optionsToDisplay[0].items[0];\n            }\n            else {\n                this.selectedOption = this.optionsToDisplay[0];\n            }\n            this.value = this.getOptionValue(this.selectedOption);\n            this.onModelChange(this.value);\n        }\n        this.selectedOptionUpdated = true;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onMouseclick(event) {\n        if (this.disabled || this.readonly || this.isInputClick(event)) {\n            return;\n        }\n        this.onClick.emit(event);\n        this.accessibleViewChild.nativeElement.focus();\n        if (this.overlayVisible)\n            this.hide();\n        else\n            this.show();\n        this.cd.detectChanges();\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    isInputClick(event) {\n        return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon') ||\n            event.target.isSameNode(this.accessibleViewChild.nativeElement) ||\n            (this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement));\n    }\n    isOutsideClicked(event) {\n        return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || (this.overlay && this.overlay.contains(event.target)));\n    }\n    isEmpty() {\n        return !this.optionsToDisplay || (this.optionsToDisplay && this.optionsToDisplay.length === 0);\n    }\n    onEditableInputClick() {\n        this.bindDocumentClickListener();\n    }\n    onEditableInputFocus(event) {\n        this.focused = true;\n        this.hide();\n        this.onFocus.emit(event);\n    }\n    onEditableInputChange(event) {\n        this.value = event.target.value;\n        this.updateSelectedOption(this.value);\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    show() {\n        this.overlayVisible = true;\n        this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                let itemsWrapperSelector = this.virtualScroll ? '.cdk-virtual-scroll-viewport' : '.p-dropdown-items-wrapper';\n                this.itemsWrapper = DomHandler.findSingle(this.overlay, itemsWrapperSelector);\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                if (this.options && this.options.length) {\n                    if (!this.virtualScroll) {\n                        let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n                        if (selectedListItem) {\n                            selectedListItem.scrollIntoView({ block: 'nearest', inline: 'center' });\n                        }\n                    }\n                }\n                if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                    this.preventModelTouched = true;\n                    if (this.autofocusFilter) {\n                        this.filterViewChild.nativeElement.focus();\n                    }\n                }\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                this.onHide.emit(event);\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                ZIndexUtils.clear(event.element);\n                break;\n        }\n    }\n    scrollToSelectedVirtualScrollElement() {\n        if (!this.virtualAutoScrolled) {\n            if (this.viewPortOffsetTop) {\n                this.viewPort.scrollToOffset(this.viewPortOffsetTop);\n            }\n            else if (this.virtualScrollSelectedIndex > -1) {\n                this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n            }\n        }\n        this.virtualAutoScrolled = true;\n    }\n    updateVirtualScrollSelectedIndex(resetOffset) {\n        if (this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length) {\n            if (resetOffset) {\n                this.viewPortOffsetTop = 0;\n            }\n            this.virtualScrollSelectedIndex = this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay);\n        }\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n            }\n        }\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    hide() {\n        this.overlayVisible = false;\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n        if (this.virtualScroll) {\n            this.virtualAutoScrolled = false;\n        }\n        this.cd.markForCheck();\n    }\n    alignOverlay() {\n        if (this.overlay) {\n            if (this.appendTo)\n                DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\n            else\n                DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n        }\n    }\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        this.onBlur.emit(event);\n        if (!this.preventModelTouched) {\n            this.onModelTouched();\n        }\n        this.preventModelTouched = false;\n    }\n    findPrevEnabledOption(index) {\n        let prevEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = (index - 1); 0 <= i; i--) {\n                let option = this.optionsToDisplay[i];\n                if (this.isOptionDisabled(option)) {\n                    continue;\n                }\n                else {\n                    prevEnabledOption = option;\n                    break;\n                }\n            }\n            if (!prevEnabledOption) {\n                for (let i = this.optionsToDisplay.length - 1; i >= index; i--) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        prevEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return prevEnabledOption;\n    }\n    findNextEnabledOption(index) {\n        let nextEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = (index + 1); i < this.optionsToDisplay.length; i++) {\n                let option = this.optionsToDisplay[i];\n                if (this.isOptionDisabled(option)) {\n                    continue;\n                }\n                else {\n                    nextEnabledOption = option;\n                    break;\n                }\n            }\n            if (!nextEnabledOption) {\n                for (let i = 0; i < index; i++) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        nextEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return nextEnabledOption;\n    }\n    onKeydown(event, search) {\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n            return;\n        }\n        switch (event.which) {\n            //down\n            case 40:\n                if (!this.overlayVisible && event.altKey) {\n                    this.show();\n                }\n                else {\n                    if (this.group) {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        if (selectedItemIndex !== -1) {\n                            let nextItemIndex = selectedItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length)) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                                this.selectedOptionUpdated = true;\n                            }\n                            else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                        else {\n                            if (this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n                            }\n                        }\n                    }\n                    else {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n                        if (nextEnabledOption) {\n                            this.selectItem(event, nextEnabledOption);\n                            this.selectedOptionUpdated = true;\n                        }\n                    }\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                if (this.group) {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    if (selectedItemIndex !== -1) {\n                        let prevItemIndex = selectedItemIndex.itemIndex - 1;\n                        if (prevItemIndex >= 0) {\n                            this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n                            this.selectedOptionUpdated = true;\n                        }\n                        else if (prevItemIndex < 0) {\n                            let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n                            if (prevGroup) {\n                                this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                    }\n                }\n                else {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n                    if (prevEnabledOption) {\n                        this.selectItem(event, prevEnabledOption);\n                        this.selectedOptionUpdated = true;\n                    }\n                }\n                event.preventDefault();\n                break;\n            //space\n            case 32:\n                if (search) {\n                    if (!this.overlayVisible) {\n                        this.show();\n                    }\n                    else {\n                        this.hide();\n                    }\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                if (this.overlayVisible && (!this.filter || (this.optionsToDisplay && this.optionsToDisplay.length > 0))) {\n                    this.hide();\n                }\n                else if (!this.overlayVisible) {\n                    this.show();\n                }\n                event.preventDefault();\n                break;\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n                break;\n            //search item based on keyboard input\n            default:\n                if (search && !event.metaKey) {\n                    this.search(event);\n                }\n                break;\n        }\n    }\n    search(event) {\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        const char = event.key;\n        this.previousSearchChar = this.currentSearchChar;\n        this.currentSearchChar = char;\n        if (this.previousSearchChar === this.currentSearchChar)\n            this.searchValue = this.currentSearchChar;\n        else\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\n        let newOption;\n        if (this.group) {\n            let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : { groupIndex: 0, itemIndex: 0 };\n            newOption = this.searchOptionWithinGroup(searchIndex);\n        }\n        else {\n            let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            newOption = this.searchOption(++searchIndex);\n        }\n        if (newOption && !this.isOptionDisabled(newOption)) {\n            this.selectItem(event, newOption);\n            this.selectedOptionUpdated = true;\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = null;\n        }, 250);\n    }\n    searchOption(index) {\n        let option;\n        if (this.searchValue) {\n            option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n            if (!option) {\n                option = this.searchOptionInRange(0, index);\n            }\n        }\n        return option;\n    }\n    searchOptionInRange(start, end) {\n        for (let i = start; i < end; i++) {\n            let opt = this.optionsToDisplay[i];\n            if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                return opt;\n            }\n        }\n        return null;\n    }\n    searchOptionWithinGroup(index) {\n        let option;\n        if (this.searchValue) {\n            for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n                for (let j = (index.groupIndex === i) ? (index.itemIndex + 1) : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n                    let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                    if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                        return opt;\n                    }\n                }\n            }\n            if (!option) {\n                for (let i = 0; i <= index.groupIndex; i++) {\n                    for (let j = 0; j < ((index.groupIndex === i) ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n                        let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                        if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                            return opt;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    findOptionIndex(val, opts) {\n        let index = -1;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                if ((val == null && this.getOptionValue(opts[i]) == null) || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    findOption(val, opts, inGroup) {\n        if (this.group && !inGroup) {\n            let opt;\n            if (opts && opts.length) {\n                for (let optgroup of opts) {\n                    opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n                    if (opt) {\n                        break;\n                    }\n                }\n            }\n            return opt;\n        }\n        else {\n            let index = this.findOptionIndex(val, opts);\n            return (index != -1) ? opts[index] : null;\n        }\n    }\n    onFilterInputChange(event) {\n        let inputValue = event.target.value;\n        if (inputValue && inputValue.length) {\n            this._filterValue = inputValue;\n            this.activateFilter();\n        }\n        else {\n            this._filterValue = null;\n            this.optionsToDisplay = this.options;\n        }\n        this.optionsChanged = true;\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue });\n    }\n    activateFilter() {\n        let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n        if (this.options && this.options.length) {\n            if (this.group) {\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push(Object.assign(Object.assign({}, optgroup), { [this.optionGroupChildren]: filteredSubOptions }));\n                    }\n                }\n                this.optionsToDisplay = filteredGroups;\n            }\n            else {\n                this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n            }\n            this.optionsChanged = true;\n        }\n    }\n    applyFocus() {\n        if (this.editable)\n            DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();\n        else\n            DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    }\n    focus() {\n        this.applyFocus();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (!this.preventDocumentDefault && this.isOutsideClicked(event)) {\n                    this.hide();\n                    this.unbindDocumentClickListener();\n                }\n                this.preventDocumentDefault = false;\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide();\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, (event) => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    clear(event) {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n        this.updateSelectedOption(this.value);\n        this.updateEditableLabel();\n        this.onClear.emit(event);\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.itemsWrapper = null;\n        this.onModelTouched();\n    }\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nDropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Dropdown, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i3.FilterService }, { token: i3.PrimeNGConfig }, { token: i3.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nDropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: Dropdown, selector: \"p-dropdown\", inputs: { scrollHeight: \"scrollHeight\", filter: \"filter\", name: \"name\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", readonly: \"readonly\", required: \"required\", editable: \"editable\", appendTo: \"appendTo\", tabindex: \"tabindex\", placeholder: \"placeholder\", filterPlaceholder: \"filterPlaceholder\", filterLocale: \"filterLocale\", inputId: \"inputId\", selectId: \"selectId\", dataKey: \"dataKey\", filterBy: \"filterBy\", autofocus: \"autofocus\", resetFilterOnHide: \"resetFilterOnHide\", dropdownIcon: \"dropdownIcon\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionDisabled: \"optionDisabled\", optionGroupLabel: \"optionGroupLabel\", optionGroupChildren: \"optionGroupChildren\", autoDisplayFirst: \"autoDisplayFirst\", group: \"group\", showClear: \"showClear\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", virtualScroll: \"virtualScroll\", itemSize: \"itemSize\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", ariaFilterLabel: \"ariaFilterLabel\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", filterMatchMode: \"filterMatchMode\", maxlength: \"maxlength\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", autofocusFilter: \"autofocusFilter\", disabled: \"disabled\", options: \"options\", filterValue: \"filterValue\" }, outputs: { onChange: \"onChange\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onClick: \"onClick\", onShow: \"onShow\", onHide: \"onHide\", onClear: \"onClear\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused || overlayVisible\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [DROPDOWN_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"accessibleViewChild\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"viewPort\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }, { propertyName: \"editableInputViewChild\", first: true, predicate: [\"editableInput\"], descendants: true }], ngImport: i0, template: `\n         <div #container [ngClass]=\"{'p-dropdown p-component':true,\n            'p-disabled':disabled, 'p-dropdown-open':overlayVisible, 'p-focus':focused, 'p-dropdown-clearable': showClear && !disabled}\"\n            (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #in [attr.id]=\"inputId\" type=\"text\" readonly (focus)=\"onInputFocus($event)\" aria-haspopup=\"listbox\" [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-expanded]=\"false\" [attr.aria-labelledby]=\"ariaLabelledBy\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\" [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\" role=\"combobox\">\n            </div>\n            <span [attr.id]=\"labelId\" [ngClass]=\"{'p-dropdown-label p-inputtext':true,'p-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n            </span>\n            <span [ngClass]=\"{'p-dropdown-label p-inputtext p-placeholder':true,'p-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</span>\n            <input #editableInput type=\"text\" [attr.maxlength]=\"maxlength\" class=\"p-dropdown-label p-inputtext\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" (click)=\"onEditableInputClick()\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"'p-dropdown-panel p-component'\" (click)=\"onOverlayClick($event)\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.start)=\"onOverlayAnimationEnd($event)\"onOverlayAnimationEnd [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-dropdown-header\" *ngIf=\"filter\">\n                    <div class=\"p-dropdown-filter-container\" (click)=\"$event.stopPropagation()\">\n                        <input #filter type=\"text\" autocomplete=\"off\" [value]=\"filterValue||''\" class=\"p-dropdown-filter p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\"\n                        (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\" (input)=\"onFilterInputChange($event)\" [attr.aria-label]=\"ariaFilterLabel\" [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\">\n                        <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"{'p-dropdown-virtualscroll': virtualScroll}\" role=\"listbox\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n                                <li class=\"p-dropdown-item-group\">\n                                    <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption}\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                    <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                    (onClick)=\"onItemClick($event)\"\n                                                    [template]=\"itemTemplate\"></p-dropdownItem>\n                                </ng-template>\n                            </ng-container>\n                            <ng-template #virtualScrollList>\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\"scrollToSelectedVirtualScrollElement()\" #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && optionsToDisplay && optionsToDisplay.length\">\n                                    <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                        <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                                   (onClick)=\"onItemClick($event)\"\n                                                                   [template]=\"itemTemplate\"></p-dropdownItem>\n                                    </ng-container>\n                                </cdk-virtual-scroll-viewport>\n                            </ng-template>\n                        </ng-template>\n                        <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{emptyFilterMessageLabel}}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </div>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-panel{position:absolute;top:0;left:0}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"], components: [{ type: DropdownItem, selector: \"p-dropdownItem\", inputs: [\"option\", \"selected\", \"label\", \"disabled\", \"visible\", \"itemSize\", \"template\"], outputs: [\"onClick\"] }, { type: i4.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.Tooltip, selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { type: i4.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Dropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-dropdown', template: `\n         <div #container [ngClass]=\"{'p-dropdown p-component':true,\n            'p-disabled':disabled, 'p-dropdown-open':overlayVisible, 'p-focus':focused, 'p-dropdown-clearable': showClear && !disabled}\"\n            (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #in [attr.id]=\"inputId\" type=\"text\" readonly (focus)=\"onInputFocus($event)\" aria-haspopup=\"listbox\" [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-expanded]=\"false\" [attr.aria-labelledby]=\"ariaLabelledBy\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\" [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\" role=\"combobox\">\n            </div>\n            <span [attr.id]=\"labelId\" [ngClass]=\"{'p-dropdown-label p-inputtext':true,'p-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n            </span>\n            <span [ngClass]=\"{'p-dropdown-label p-inputtext p-placeholder':true,'p-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</span>\n            <input #editableInput type=\"text\" [attr.maxlength]=\"maxlength\" class=\"p-dropdown-label p-inputtext\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" (click)=\"onEditableInputClick()\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"'p-dropdown-panel p-component'\" (click)=\"onOverlayClick($event)\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.start)=\"onOverlayAnimationEnd($event)\"onOverlayAnimationEnd [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-dropdown-header\" *ngIf=\"filter\">\n                    <div class=\"p-dropdown-filter-container\" (click)=\"$event.stopPropagation()\">\n                        <input #filter type=\"text\" autocomplete=\"off\" [value]=\"filterValue||''\" class=\"p-dropdown-filter p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\"\n                        (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\" (input)=\"onFilterInputChange($event)\" [attr.aria-label]=\"ariaFilterLabel\" [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\">\n                        <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"{'p-dropdown-virtualscroll': virtualScroll}\" role=\"listbox\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n                                <li class=\"p-dropdown-item-group\">\n                                    <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption}\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                    <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                    (onClick)=\"onItemClick($event)\"\n                                                    [template]=\"itemTemplate\"></p-dropdownItem>\n                                </ng-template>\n                            </ng-container>\n                            <ng-template #virtualScrollList>\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\"scrollToSelectedVirtualScrollElement()\" #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && optionsToDisplay && optionsToDisplay.length\">\n                                    <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                        <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                                   (onClick)=\"onItemClick($event)\"\n                                                                   [template]=\"itemTemplate\"></p-dropdownItem>\n                                    </ng-container>\n                                </cdk-virtual-scroll-viewport>\n                            </ng-template>\n                        </ng-template>\n                        <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{emptyFilterMessageLabel}}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </div>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition(':leave', [\n                                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ], host: {\n                        'class': 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n                    }, providers: [DROPDOWN_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-panel{position:absolute;top:0;left:0}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i3.FilterService }, { type: i3.PrimeNGConfig }, { type: i3.OverlayService }]; }, propDecorators: { scrollHeight: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], filterPlaceholder: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], selectId: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], resetFilterOnHide: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], autoDisplayFirst: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], autofocusFilter: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], accessibleViewChild: [{\n                type: ViewChild,\n                args: ['in']\n            }], viewPort: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], editableInputViewChild: [{\n                type: ViewChild,\n                args: ['editableInput']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], disabled: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }] } });\nclass DropdownModule {\n}\nDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownModule, declarations: [Dropdown, DropdownItem], imports: [CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule], exports: [Dropdown, SharedModule, ScrollingModule] });\nDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownModule, imports: [[CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule], SharedModule, ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule],\n                    exports: [Dropdown, SharedModule, ScrollingModule],\n                    declarations: [Dropdown, DropdownItem]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}